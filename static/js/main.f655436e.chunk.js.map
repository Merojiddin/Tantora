{"version":3,"sources":["client.ts","@config/env.ts","theme.ts","stores/registerStore.ts","i18n.ts","components/@common/Languages.tsx","@config/nav_items.tsx","components/@common/Menu.tsx","components/@common/MenuMobile.tsx","components/@common/Header.tsx","components/@common/Footer.tsx","App.tsx","serviceWorker.ts","index.tsx","components/@common/Loading.tsx","hooks/useStore.tsx","assets/images/icon.png","stores/appStore.ts","stores/authStore.ts","stores/chatStore.ts","stores/loginStore.ts","hooks/useSocket.ts","stores/rootStore.ts"],"names":["client","ApolloClient","uri","env","backendUrl","request","operation","token","localStorage","getItem","setContext","headers","Authorization","authToken","process","REACT_APP_AUTH_TOKEN","chatUrl","REACT_APP_CHAT_URL","REACT_APP_BACKEND_URL","theme","createMuiTheme","palette","primary","indigo","secondary","blueGrey","common","white","blue","grey","lightGrey","lighterGrey","ultraLightGrey","ultraLightGrey2","ultraLightGrey3","roundGrey","grey2","black","green","whiteGrey","darkBlue","breakpoints","values","xs","sm","md","lg","xl","mixins","container","display","alignItems","justifyContent","width","maxWidth","margin","down","padding","sectionPaddings","fullPageContainer","minHeight","form","border","divider","borderRadius","ROLE_ENUM","Object","freeze","CLIENT","PRODUCER","ORGANIZER","CreateUserMutation","gql","AddToAdminsMutation","AddToProducerMutation","RegisterStore","authStore","appClient","observable","action","val","loading","error","a","role","variables","isAuth","setLoading","setError","mutate","mutation","data","setAuthToken","get","setRefreshToken","userId","i18n","use","backend","detector","initReactI18next","init","loadPath","whitelist","preload","fallbackLng","react","wait","useSuspense","Languages","observer","appStore","useStore","classes","useStyles","Select","className","select","value","lang","onChange","e","setLang","target","MenuItem","LANGUAGES","en","ru","cn","makeStyles","color","marginRight","fontSize","NAV_ITEMS","label","link","icon","src","Logo","alt","Menu","useTranslation","t","List","list","map","to","key","ListItem","button","ListItemText","minWidth","open","handleClose","Drawer","anchor","onClose","onClick","onKeyDown","navItem","ListItemIcon","itemIcon","Divider","signBtnsWrapper","style","textDecoration","Button","signBtn","height","backgroundColor","dark","fullList","LogoutQuery","Header","useState","menuOpen","setMenuOpen","active","setActive","useApolloClient","isTablet","useMediaQuery","query","handleLogout","resetStore","clear","handleToggleMenu","bottomOffset","onEnter","onLeave","root","AppBar","position","cls","headerBar","headerBg","MenuMobile","Toolbar","headerToolbar","IconButton","edge","menuButton","aria-label","whiteBtn","Typography","variant","logo","loginWrapper","signLang","notwhiteBtn","top","left","zIndex","alignContent","boxShadow","paddingTop","opacity","content","right","transition","spacing","marginLeft","boxSizing","backgroundSize","footer","paddingBottom","flexWrap","logoContainer","ftitle","marginTop","marginBottom","textAlign","menu","title","fontWeight","btn","listStyle","contacts","iconWrapper","socialIcon","icons","Container","CardMedia","image","href","rel","Date","getFullYear","LoadableHome","loadable","fallback","Loading","LoadableExhibitions","LoadableExhibition","LoadableLogin","LoadableAdmins","LoadableRegistration","LoadableMessages","LoadableVisitors","LoadableExhibitors","App","rootStore","useEffect","fetchMe","ThemeProvider","main","path","exact","Footer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","CircularIndeterminate","StoreContext","createContext","StoreProvider","children","Provider","store","useContext","Error","module","exports","AppStore","reaction","_lang","changeLanguage","this","computed","MeQuery","RefreshTokenMutation","LOCAL_STORAGE_ENUMS","AUTH_TOKEN","REFRESH_TOKEN","AuthStore","refreshToken","_authToken","_refreshToken","isEmpty","user","_user","removeItem","setItem","me","setUser","refreshAccessToken","accessToken","ChatStore","socket","when","undefined","emit","on","handleRecents","handleFriends","handleUserJoin","handleNewMessage","handleNewMessages","receiverId","receiverName","room","userName","currentChats","chats","set","messages","senderId","senderName","_","recentChats","friends","chatInput","LoginUserQuery","LoginStore","password","Socket","_io","_instance","getInstance","io","RootStore","_socket","chatStore","loginStore","registerStore","connect"],"mappings":"8HAAA,uDAIaA,EAAS,IAAIC,IAAa,CACrCC,IAAKC,IAAIC,WACTC,QAAS,SAACC,GACR,IAAMC,EAAQC,aAAaC,QAAQ,aAEnCH,EAAUI,WAAW,CACnBC,QAAS,CACPC,cAAeL,EAAK,iBAAaA,GAAU,U,iCCXpC,KACbM,UAAWC,2HAAYC,sBAAwB,GAC/CC,QAASF,2HAAYG,oBAAsB,8BAC3Cb,WACEU,2HAAYI,uBAAyB,mC,sGCArCC,EAAQC,YAAe,CACzBC,QAAS,CACPC,QAASC,IACTC,UAAWC,IACXC,OAAQ,CACNC,MAAO,OACPC,KAAM,UACNC,KAAM,UACNC,UAAW,UACXC,YAAa,UACbC,eAAgB,UAChBC,gBAAiB,UACjBC,gBAAiB,UACjBC,UAAW,UACXC,MAAO,UACPC,MAAO,UACPC,MAAO,UACPC,UAAW,UACXC,SAAU,cAKhBrB,EAAK,2BACAA,GADA,IAEHsB,YAAY,2BACPtB,EAAMsB,aADA,IAETC,OAAQ,CACNC,GAAI,IACJC,GAAI,IACJC,GAAI,IACJC,GAAI,KACJC,GAAI,QAGRC,OAAO,2BACF7B,EAAM6B,QADL,IAEJC,WAAS,GACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPC,SAAU,KACVC,OAAQ,UAND,cAONpC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BC,QAAS,WARJ,cAUNtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BC,QAAS,WAXJ,cAaNtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BC,QAAS,WAdJ,GAiBTC,iBAAe,GACbD,QAAS,WADI,cAEZtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BC,QAAS,eAHE,cAKZtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BC,QAAS,eANE,cAQZtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BC,QAAS,eATE,GAYfE,kBAAmB,CACjBT,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBQ,UAAW,qBACXH,QAAS,WAEXI,KAAM,CACJR,MAAO,OACPC,SAAU,QACVG,QAAS,YACTK,OAAO,aAAD,OAAe3C,EAAME,QAAQ0C,SACnCC,aAAc,OAKL7C,O,4jCC3ER,IAAM8C,EAAYC,OAAOC,OAAO,CACrCC,OAAQ,SACRC,SAAU,WACVC,UAAW,cAcPC,EAAqBC,YAAH,KA6BlBC,EAAsBD,YAAH,KAQnBE,EAAwBF,YAAH,KAQrBG,G,EAIJ,WACUC,EACAC,GACP,yBAFOD,YAER,KADQC,YACR,yL,qCANDC,c,yEAAqC,K,mCACrCA,c,yEAAwC,Q,wCAOxCC,U,oFAA4B,SAACC,GAC5B,EAAKC,QAAUD,M,sCAGhBD,U,oFAA0B,SAACG,GAC1B,EAAKA,MAAQA,M,4CAGdH,U,2HAA+B,qCAAAI,EAAA,yDAC9BC,EAD8B,EAC9BA,KACGC,EAF2B,wBAIzB,EAAKT,UAAUU,OAJU,wBAK5B,EAAKC,YAAW,GAChB,EAAKC,SAAS,MANc,kBASH,EAAKX,UAAUY,OAEnC,CACDC,SAAUnB,EACVc,cAbwB,mBASlBM,EATkB,EASlBA,KAOR,EAAKf,UAAUgB,aAAaC,IAAIF,EAAM,iCACtC,EAAKf,UAAUkB,gBACbD,IAAIF,EAAM,kCAENI,EAASF,IAAIF,EAAM,0BAErBP,IAASnB,EAAUI,SAtBG,kCAuBlB,EAAKQ,UAAUY,OAAO,CAC1BC,SAAUhB,EACVW,UAAW,CAAEU,YAzBS,mCA2BfX,IAASnB,EAAUK,UA3BJ,kCA4BlB,EAAKO,UAAUY,OAAO,CAC1BC,SAAUjB,EACVY,UAAW,CAAEU,YA9BS,QAkC1B,EAAKR,YAAW,GAlCU,kDAoC1B,EAAKC,SAAL,MACA,EAAKD,YAAW,GArCU,0D,4DA2CnBZ,O,qNCjIfqB,IACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJH,QAAS,CACPI,SAAU,gCAEZC,UAAW,CAAC,KAAM,KAAM,MACxBC,QAAS,CAAC,KAAM,KAAM,MACtBC,YAAa,KACbC,MAAO,CACLC,MAAM,EACNC,aAAa,KAIJZ,EAAf,E,OAAeA,I,2UCbTa,EAAYC,aAAS,WAAO,IACxBC,EAAaC,cAAbD,SACFE,EAAUC,IAMhB,OACE,kBAACC,EAAA,EAAD,CACEC,UAAWH,EAAQI,OACnBC,MAAOP,EAASQ,KAChBC,SARqD,SAACC,GACxDV,EAASW,QAAQD,EAAEE,OAAOL,SASxB,kBAACM,EAAA,EAAD,CAAUN,MAAOO,IAAUC,IAA3B,MACA,kBAACF,EAAA,EAAD,CAAUN,MAAOO,IAAUE,IAA3B,gBACA,kBAACH,EAAA,EAAD,CAAUN,MAAOO,IAAUG,IAA3B,oBAKAd,EAAYe,aAAW,SAAC9G,GAAD,MAAY,CACvCkG,OAAO,aACLa,MAAO/G,EAAME,QAAQK,OAAOC,MAC5BwG,YAAa,GACbrE,OAAQ,QACP3C,EAAMsB,YAAYe,KAAK,MAAQ,CAC9B4E,SAAU,SAKDvB,I,6CCtCFwB,GAAY,CACvB,CACEC,MAAO,OACPC,KAAM,IACNC,KAAM,yBAAKC,IAAKC,KAAMC,IAAI,UAE5B,CACEL,MAAO,cACPC,KAAM,eACNC,KAAM,IAER,CACEF,MAAO,QACPC,KAAM,SACNC,KAAM,IAER,CACEF,MAAO,UACPC,KAAM,YACNC,KAAM,KCXJI,GAAO9B,aAAS,WAAO,IAAD,EACd+B,YAAe,UAApBC,EADmB,oBAEpB7B,EAAUC,KAEhB,OACE,kBAAC6B,EAAA,EAAD,CAAM3B,UAAWH,EAAQ+B,MACtBX,GAAUY,KAAI,gBAAGX,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACb,kBAAC,IAAD,CAAMW,GAAIX,EAAMY,IAAKb,GACnB,kBAACc,EAAA,EAAD,CACEhC,UAAWH,EAAQoC,OACnBnB,MAAM,YACNiB,IAAKb,EACLe,QAAQ,GAER,kBAACC,EAAA,EAAD,CAAchI,QAASwH,EAAE,UAAD,OAAWR,eAQzCpB,GAAYe,aAAW,SAAC9G,GAAD,MAAY,CACvC6H,KAAM,CACJ9F,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBiG,OAAQ,CACNnG,QAAS,OACTC,WAAY,SACZ+E,MAAO/G,EAAME,QAAQK,OAAOC,MAC5BwG,YAAa,GACbC,SAAU,GAEV,eAAgB,CACdD,YAAa,IAGjBK,KAAM,CACJN,MAAO/G,EAAME,QAAQK,OAAOC,MAC5B4H,SAAU,OACVpB,YAAa,QAIFS,M,8BCrCTA,GAAmB9B,aAAS,YAA4B,IAAzB0C,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnCxC,EAAUC,KAD2C,EAE/C2B,YAAe,UAApBC,EAFoD,oBAI3D,OACE,6BACE,kBAACY,GAAA,EAAD,CAAQC,OAAO,OAAOH,KAAMA,EAAMI,QAASH,GACzC,yBACErC,UAAWH,EAAQ+B,KACnB5D,KAAK,eACLyE,QAASJ,EACTK,UAAWL,GAEX,kBAACV,EAAA,EAAD,KACGV,GAAUY,KAAI,YAA4B,IAAzBX,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAC7B,OACE,kBAAC,IAAD,CAAMU,GAAIX,EAAMY,IAAKb,GACnB,kBAACc,EAAA,EAAD,CACEhC,UAAWH,EAAQ8C,QACnB7B,MAAM,YACNiB,IAAKb,EACLe,QAAQ,GAER,kBAACW,GAAA,EAAD,CAAc5C,UAAWH,EAAQgD,UAC9BzB,GAEH,kBAACc,EAAA,EAAD,CAAchI,QAASwH,EAAE,UAAD,OAAWR,YAM7C,kBAAC4B,GAAA,EAAD,MACA,kBAACnB,EAAA,EAAD,CAAM3B,UAAWH,EAAQkD,iBACvB,kBAAC,IAAD,CAAMjB,GAAG,YAAYkB,MAAO,CAAEC,eAAgB,SAC5C,kBAACC,EAAA,EAAD,CAAQpC,MAAM,aAAaY,EAAE,qBAE/B,kBAAC,IAAD,CACEI,GAAG,SACHkB,MAAO,CAAEC,eAAgB,QACzBjD,UAAWH,EAAQsD,SAEnB,kBAACD,EAAA,EAAD,CAAQpC,MAAM,WAAWY,EAAE,2BASnC5B,GAAYe,aAAW,SAAC9G,GAAD,MAAY,CACvC6H,KAAM,CACJO,SAAU,IACViB,OAAQ,OACRC,gBAAiBtJ,EAAME,QAAQG,UAAUkJ,MAE3CC,SAAU,CACRtH,MAAO,QAET0G,QAAS,CACP7G,QAAS,OACTC,WAAY,SACZ+E,MAAO/G,EAAME,QAAQK,OAAOC,OAE9BsI,SAAU,CACRO,OAAQ,GACR,UAAW,CACTA,OAAQ,OACRnH,MAAO,SAGX8G,gBAAiB,CACf,KAAM,CACJjH,QAAS,OACTC,WAAY,SACZC,eAAgB,WAGpBmH,QAAS,CACP,KAAM,CACJrC,MAAO/G,EAAME,QAAQK,OAAOC,YAKnBiH,M,6JClFf,IAAMgC,GAAcpG,YAAH,MAQXqG,GAAS/D,aAAS,WAAO,IAAD,EAChB+B,YAAe,UAApBC,EADqB,sBAEIgC,oBAAS,GAFb,mBAErBC,EAFqB,KAEXC,EAFW,OAGAF,oBAAS,GAHT,mBAGrBG,EAHqB,KAGbC,EAHa,KAIpBtG,EAAcoC,cAAdpC,UACF5E,EAASmL,cACTlE,EAAUC,KACVkE,EAAWC,wBAAc,CAAEC,MAAO,uBAElCC,EAAY,uCAAG,sBAAApG,EAAA,+EAEXnF,EAAOsL,MAAkC,CAC7CA,MAAOV,GACPvF,UAAW,CACT9E,MAAOqE,EAAU/D,aALJ,6DAYnBb,EAAOwL,aACP5G,EAAU6G,QAbS,wDAAH,qDAgBZC,EAAmB,SAAClC,GAAD,OAAmB,WAC1CwB,EAAYxB,KASd,OACE,oCACE,kBAAC,IAAD,CACEmC,cAAe,IACfC,QAXc,WAClBV,GAAU,IAWNW,QATc,WAClBX,GAAU,MAUR,yBAAK9D,UAAWH,EAAQ6E,MACtB,kBAACC,EAAA,EAAD,CACEC,SAAS,SACT5E,UAAW6E,IAAIhF,EAAQiF,UAAW,CAAEjB,YAEpC,yBAAK7D,UAAS,UAAKH,EAAQkF,SAAb,SACbf,GACC,kBAACgB,GAAD,CAAY5C,KAAMuB,EAAUtB,YAAaiC,GAAiB,KAE5D,kBAACW,EAAA,EAAD,CAASjF,UAAWH,EAAQqF,eACzBlB,GACC,kBAACmB,EAAA,EAAD,CACEC,KAAK,QACLpF,UAAWH,EAAQwF,WACnBvE,MAAM,UACNwE,aAAW,OACX7C,QAAS6B,GAAiB,IAE1B,kBAAC,IAAD,CAAUtE,UAAWH,EAAQ0F,aAG/BvB,GACA,kBAAC,IAAD,CAAMlC,GAAG,IAAIkB,MAAO,CAAEC,eAAgB,SACpC,kBAACC,EAAA,EAAD,KACE,kBAACsC,EAAA,EAAD,CAAYC,QAAQ,KAAKzF,UAAWH,EAAQ0F,UAC1C,yBAAKlE,IAAKC,KAAMC,IAAI,OAAOvB,UAAWH,EAAQ6F,WAKpD1B,GAAY,kBAAC,GAAD,MACd,yBAAKhE,UAAWH,EAAQ8F,cACtB,kBAAC,EAAD,MACCnI,EAAUU,OACT,kBAACgF,EAAA,EAAD,CAAQlD,UAAWH,EAAQ0F,SAAU9C,QAAS0B,GAA9C,UAIA,yBAAKnE,UAAWH,EAAQ+F,WACpB5B,GACA,kBAAC,IAAD,CAAMlC,GAAG,YAAYkB,MAAO,CAAEC,eAAgB,SAC5C,kBAACC,EAAA,EAAD,CAAQlD,UAAWH,EAAQ0F,UACxB7D,EAAE,qBAIT,kBAAC,IAAD,CAAMI,GAAG,SAASkB,MAAO,CAAEC,eAAgB,SACzC,kBAACC,EAAA,EAAD,CAAQlD,UAAWH,EAAQgG,aACxBnE,EAAE,6BAanB5B,GAAYe,aAAW,SAAC9G,GAC5B,MAAO,CACL2K,KAAK,aACHE,SAAU,QACVkB,IAAK,EACLC,KAAM,EACN9J,MAAO,OACP+J,OAAQ,IACRC,aAAc,SACd9J,OAAQ,QACPpC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9B+F,SAAU,IACViB,OAAQ,MAGZ0B,UAAW,CACTF,SAAU,WACVvB,gBAAiB,cACjB6C,UAAW,OACXC,WAAY,GAEZ,WAAY,CACV,UAAW,CAAEC,QAAS,GACtBD,WAAY,GAGd,WAAY,CACVE,QAAQ,KACRzB,SAAU,WACVmB,KAAM,EACNO,MAAO,EACPrK,MAAO,OACPmH,OAAQ,SAGZ2B,SAAU,CACRH,SAAU,WACVmB,KAAM,EACND,IAAK,EACL7J,MAAO,OACPmH,OAAQ,OACRC,gBAAiBtJ,EAAME,QAAQK,OAAOc,SACtCgL,QAAS,EACTG,WAAY,OACZ/J,UAAW,IAEb0I,cAAc,2BACTnL,EAAM6B,OAAOC,WADL,IAEXG,eAAgB,kBAElBqJ,WAAY,CACVtE,YAAahH,EAAMyM,QAAQ,GAC3B,yBAA0B,CACxB,qBAAsB,CACpBxF,SAAU,MAIhB4E,SAAS,eACN7L,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BD,OAAQ,IAGZoJ,SAAU,CACRzE,MAAO/G,EAAME,QAAQK,OAAOC,MAC5ByG,SAAU,IAEZ6E,YAAY,aACV/E,MAAO/G,EAAME,QAAQK,OAAOC,MAC5B8I,gBAAiBtJ,EAAME,QAAQK,OAAOE,KACtCwG,SAAU,GACV3E,QAAS,gBACToK,WAAY,GACZxK,MAAO,IACPmH,OAAQ,IACPrJ,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BqK,WAAY,IAGhBf,KAAK,aACHS,WAAY,EACZ/C,OAAQ,GACRsD,UAAW,aACXC,eAAgB,QAChB/B,SAAU,YACT7K,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BgH,OAAQ,KAGZuC,aAAc,CACZ7J,QAAS,OACTC,WAAY,cAKH0H,M,wGCzJT3D,GAAYe,aAAW,SAAC9G,GAAD,MAAY,CACvC6M,OAAO,aACLT,WAAY,GACZU,cAAe,GACfxD,gBAAiBtJ,EAAME,QAAQK,OAAOc,SACtCiB,QAAS,IACRtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9ByK,cAAe,KAGnBnC,KAAK,aACH5I,QAAS,OACTC,WAAY,aACZC,eAAgB,gBAChB8K,SAAU,OACVzD,gBAAiBtJ,EAAME,QAAQK,OAAOc,SACtC0F,MAAO/G,EAAME,QAAQK,OAAOC,MAC5B8B,QAAS,UACRtC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9B0K,SAAU,SAGdC,cAAc,eACXhN,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BH,MAAO,SAGXyJ,KAAK,aACHd,SAAU,WACV3I,MAAO,GACPmH,OAAQ,GACRsD,UAAW,aACXC,eAAgB,QAChBxK,OAAQ,eACPpC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BD,OAAQ,iBAGZ6K,OAAO,aACLlG,MAAO/G,EAAME,QAAQK,OAAOU,MAC5BgG,SAAU,GACV/E,MAAO,OACPwK,WAAY,EACZQ,UAAW,IACVlN,EAAMsB,YAAYe,KAAK,MAAQ,CAC9B8K,aAAc,EACd/K,OAAQ,OACRgL,UAAW,WAGfC,KAAM,CACJxC,SAAU,WACV9D,MAAO/G,EAAME,QAAQK,OAAOO,iBAE9BwM,MAAO,CACLrG,SAAU,GACVsG,WAAY,OACZJ,aAAc,IAEhBK,IAAK,CACHvG,SAAU,GACVwG,UAAW,OACXP,UAAW,GAEbQ,SAAU,CACRzG,SAAU,GACVwG,UAAW,OACXP,UAAW,EACX,QAAS,CACPnL,QAAS,OACTC,WAAY,SACZ+E,MAAO/G,EAAME,QAAQK,OAAOO,kBAGhC6M,YAAY,aACV5L,QAAS,OACTK,OAAQ,QACPpC,EAAMsB,YAAYe,KAAK,MAAQ,CAC9BN,QAAS,OACTG,MAAO,OACPF,WAAY,SACZC,eAAgB,SAChBG,OAAQ,SAGZwL,WAAW,aACTV,UAAW,GACXvK,OAAO,aAAD,OAAe3C,EAAME,QAAQK,OAAOO,iBAC1CwB,QAAS,EACTO,aAAc,MACdmE,YAAa,GACb,cAAe,CACbA,YAAa,IAEdhH,EAAMsB,YAAYe,KAAK,MAAQ,CAC9B6K,UAAW,GACX5K,QAAS,EACTN,WAAY,SACZE,MAAO,GACPmH,OAAQ,GACR8D,aAAc,KAGlBU,MAAO,CACLvL,QAAS,EACTO,aAAc,WAIH6G,GAhLA,WACb,IAAM5D,EAAUC,KAEhB,OACE,4BAAQE,UAAWH,EAAQ+G,QACzB,kBAACiB,GAAA,EAAD,CAAW3L,SAAS,KAAK8D,UAAWH,EAAQ6E,MAC1C,yBAAK1E,UAAWH,EAAQkH,eACtB,kBAACe,GAAA,EAAD,CAAWC,MAAOzG,KAAMtB,UAAWH,EAAQ6F,QAE7C,yBAAK1F,UAAWH,EAAQuH,MACtB,wBAAIpH,UAAWH,EAAQwH,OAAvB,QACA,4BACE,wBAAIrH,UAAWH,EAAQ0H,KAAvB,QACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,SACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,YACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,QACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,WACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,aAGJ,yBAAKvH,UAAWH,EAAQuH,MACtB,wBAAIpH,UAAWH,EAAQwH,OAAvB,YACA,4BACE,wBAAIrH,UAAWH,EAAQ0H,KAAvB,sBACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,qBACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,gBACA,wBAAIvH,UAAWH,EAAQ0H,KAAvB,4BAGJ,yBAAKvH,UAAWH,EAAQuH,MACtB,wBAAIpH,UAAWH,EAAQwH,OAAvB,cACA,4BACE,wBAAIrH,UAAWH,EAAQ4H,UACrB,uBACEO,KAAK,wCACLC,IAAI,sBACJ1H,OAAO,UAEP,kBAAC,KAAD,CAAWS,SAAS,QAAQhB,UAAWH,EAAQ+H,QAC9C,mCAGL,wBAAI5H,UAAWH,EAAQ4H,UACrB,uBACEO,KAAK,sBACLC,IAAI,sBACJ1H,OAAO,UAEP,kBAAC,KAAD,CAAWS,SAAS,QAAQhB,UAAWH,EAAQ+H,QAC9C,yBAIP,yBAAK5H,UAAWH,EAAQ6H,aACtB,kBAAC,KAAD,CAAc1G,SAAS,UAAUhB,UAAWH,EAAQ8H,aACpD,kBAAC,KAAD,CAAe3G,SAAS,UAAUhB,UAAWH,EAAQ8H,eAIzD,kBAACnC,EAAA,EAAD,CAAY1E,MAAM,UAAUd,UAAWH,EAAQmH,QAA/C,SACU,IAAIkB,MAAOC,cADrB,qCChDFC,GAAeC,aAAS,kBAAM,sDAA2B,CAC7DC,SAAU,kBAACC,EAAA,EAAD,QAENC,GAAsBH,aAAS,kBAAM,gCAA6B,CACtEC,SAAU,kBAACC,EAAA,EAAD,QAENE,GAAqBJ,aAAS,kBAAM,gCAAgC,CACxEC,SAAU,kBAACC,EAAA,EAAD,QAENG,GAAgBL,aAAS,kBAAM,uDAA4B,CAC/DC,SAAU,kBAACC,EAAA,EAAD,QAENI,GAAiBN,aAAS,kBAAM,iCAA4B,CAChEC,SAAU,kBAACC,EAAA,EAAD,QAENK,GAAuBP,aAAS,kBAAM,uDAAmC,CAC7EC,SAAU,kBAACC,EAAA,EAAD,QAENM,GAAmBR,aAAS,kBAAM,uDAA+B,CACrEC,SAAU,kBAACC,EAAA,EAAD,QAENO,GAAmBT,aAAS,kBAAM,gCAA+B,CACrEC,SAAU,kBAACC,EAAA,EAAD,QAENQ,GAAqBV,aAAS,kBAAM,gCAAiC,CACzEC,SAAU,kBAACC,EAAA,EAAD,QAGNS,GAAUtJ,aAAS,WACvB,IAAMG,EAAUC,KACRtC,EAAcyL,IAAdzL,UAMR,OAJA0L,qBAAU,WACR1L,EAAU2L,YACT,CAAC3L,EAAU/D,YAGZ,kBAAC,IAAD,CAAgBb,OAAQA,KACtB,kBAAC,IAAD,KACE,kBAACwQ,EAAA,EAAD,CAAerP,MAAOA,KACpB,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,0BAAMiG,UAAWH,EAAQwJ,MACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,GACrB,kBAACnB,GAAD,OAEF,kBAAC,IAAD,CAAOkB,KAAK,gBACV,kBAACd,GAAD,OAEF,kBAAC,IAAD,CAAOc,KAAK,eACV,kBAACb,GAAD,OAEF,kBAAC,IAAD,CAAOa,KAAK,WACV,kBAACX,GAAD,OAEF,kBAAC,IAAD,CAAOW,KAAK,UACV,kBAACZ,GAAD,OAEF,kBAAC,IAAD,CAAOY,KAAK,aACV,kBAACV,GAAD,OAEF,kBAAC,IAAD,CAAOU,KAAK,aACV,kBAACT,GAAD,OAEF,kBAAC,IAAD,CAAOS,KAAK,aACV,kBAACR,GAAD,OAEF,kBAAC,IAAD,CAAOQ,KAAK,eACV,kBAACP,GAAD,SAIN,kBAACS,GAAD,aAQN1J,GAAYe,YAAW,CAC3BwI,KAAM,CACJ7M,UAAW,wBAIAwM,MCjGKS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAEP,kBAAC,GAAD,MACAC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAAC1M,GAEN2M,QAAQ3M,MAAMA,EAAM4M,a,gCEpJ5B,sCAIM5K,EAAYe,YAAW,CAC3B6D,KAAM,CACJ5I,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,MAAO,OACPmH,OAAQ,UAcGuH,IAVe,WAC5B,IAAM9K,EAAUC,IAEhB,OACE,yBAAKE,UAAWH,EAAQ6E,MACtB,kBAAC,IAAD,S,gCCnBN,8DAGMkG,EAAeC,wBAAyB5B,KAEjC6B,EAAoB,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC/B,kBAACH,EAAaI,SAAd,CAAuB9K,MAAO+I,KAAY8B,IAG7B,eACb,IAAME,EAAQC,qBAAWN,GAEzB,IAAKK,EACH,MAAM,IAAIE,MAAM,gDAGlB,OAAOF,I,mBChBTG,EAAOC,QAAU,IAA0B,kC,iICG9B5K,EAAY3D,OAAOC,OAAO,CACrC2D,GAAI,KACJC,GAAI,KACJC,GAAI,OAGO0K,GAAb,aAGE,aAAe,IAAD,4DACZC,oBACE,kBAAM,EAAKC,SACX,SAACrL,GACCvB,IAAK6M,eAAetL,MAP5B,oDAgByBA,GACrBuL,KAAKF,MAAQrL,IAjBjB,2BAaI,OAAOuL,KAAKF,UAbhB,wCACG9N,cADH,yEACsC+C,EAAUC,MADhD,gCAYGiL,YAZH,oGAgBGhO,UAhBH,uEAqBe2N,O,4oBCvBf,I,kCAAMM,EAAUxO,YAAH,KAePyO,EAAuBzO,YAAH,KAWpB0O,EAAsBhP,OAAOC,OAAO,CACxCgP,WAAY,YACZC,cAAe,iBA8GFC,G,aAhFb,WAAoBxO,GAAmC,yBAAnCA,YAAkC,wVACpD,IAAMhE,EAAYL,aAAaC,QAAQyS,EAAoBC,YACrDG,EAAe9S,aAAaC,QAChCyS,EAAoBE,eAGtBN,KAAKS,WAAa1S,GAAa,GAC/BiS,KAAKU,cAAgBF,GAAgB,G,mDA5BrC,OAAQG,IAAQX,KAAKS,aAA6B,OAAdT,KAAKY,O,2BAIzC,OAAOZ,KAAKa,Q,gCAIZ,IAAM9S,EACJL,aAAaC,QAAQyS,EAAoBC,aAAe,GAE1D,OAAOL,KAAKS,YAAc1S,I,mCAI1B,IAAMyS,EACJ9S,aAAaC,QAAQyS,EAAoBE,gBAAkB,GAE7D,OAAON,KAAKU,eAAiBF,M,6CAvB9BxO,c,yGACAA,c,iGACAA,c,yEAAwC,Q,kCAExCiO,Y,mGAIAA,Y,sGAIAA,Y,8GAOAA,Y,4GAiBAhO,U,oFAAe,WACd,EAAKwO,WAAa,GAClB,EAAKC,cAAgB,GACrB,EAAKG,MAAQ,KACbnT,aAAaoT,WAAWV,EAAoBC,YAC5C3S,aAAaoT,WAAWV,EAAoBE,mB,0CAG7CrO,U,oFAA6B,SAACxE,GAC7BC,aAAaqT,QAAQX,EAAoBC,WAAY5S,GACrD,EAAKgT,WAAahT,M,6CAGnBwE,U,oFAAgC,SAACxE,GAChCC,aAAaqT,QAAQX,EAAoBE,cAAe7S,GACxD,EAAKiT,cAAgBjT,M,qCAGtBwE,U,oFAAwB,SAAC2O,GACxB,EAAKC,MAAQD,M,qCAGd3O,U,0GAAwB,8BAAAI,EAAA,0DACnB,EAAKmO,aADc,0CAKT,EAAKzO,UAAUyG,MAAoB,CAC3CA,MAAO0H,IANU,gBAITc,EAJS,EAIjBnO,KAAQmO,GAKV,EAAKC,QAAQD,GATM,iEAWb,EAAKE,qBAXQ,QAYnB,EAAKzD,UAZc,gCAerB,EAAK9E,QAfgB,4D,gDAmBxB1G,U,0GAAmC,kCAAAI,EAAA,0DAC9B,EAAKmO,aADyB,0CAGP,EAAKzO,UAAUY,OAEnC,CACDC,SAAUuN,EACV5N,UAAW,CACTiO,aAAc,EAAKA,gBARO,gBAGtB3N,EAHsB,EAGtBA,KASFsO,EAAcpO,IAAIF,EAAM,iCAAkC,MAC1D2N,EAAezN,IAAIF,EAAM,kCAAmC,MAE9DsO,GAAeX,GACjB,EAAK1N,aAAaqO,GAClB,EAAKnO,gBAAgBwN,IAErB,EAAK7H,QAnBuB,kDAuB9B,EAAKA,QAvByB,6D,YCCvByI,G,EAzEb,WACUtP,EACAuP,GACP,IAAD,gCAFQvP,YAER,KADQuP,SACR,gHAIM9N,KAJN,sBAIa,4CAAAlB,EAAA,sEACPiP,gBAAK,uBAAsBC,IAAhB,EAAKF,UADT,uBAEPC,gBAAK,kBAAM,EAAKxP,UAAUU,UAFnB,OAKb,YAAK6O,cAAL,SAAaG,KAAK,aAAlB,UAAgC,EAAK1P,UAAU8O,YAA/C,aAAgC,EAAqB3N,QACrD,YAAKoO,cAAL,SAAaG,KAAK,cAAlB,UAAiC,EAAK1P,UAAU8O,YAAhD,aAAiC,EAAqB3N,QAGtD,YAAKoO,cAAL,SAAaI,GAAG,kBAAmB,EAAKC,eACxC,YAAKL,cAAL,SAAaI,GAAG,UAAW,EAAKE,eAChC,YAAKN,cAAL,SAAaI,GAAG,cAAe,EAAKG,gBAEpC,YAAKP,cAAL,SAAaI,GAAG,cAAe,EAAKI,kBACpC,YAAKR,cAAL,SAAaI,GAAG,gBAAiB,EAAKK,mBAdzB,4CAJb,sSACA9B,KAAKzM,Q,mCARNvB,c,yEAA0BA,aAAWmE,IAAwB,O,qCAC7DnE,c,wEAAuC,M,yCACvCA,c,wEAA+C,M,6CA0B/CC,U,2HAAyB,WACxB8P,EACAC,EACAC,GAHwB,mBAAA5P,EAAA,sEAKlBiP,gBAAK,uBAAsBC,IAAhB,EAAKF,UALE,uBAMlBC,gBAAK,kBAAM,EAAKxP,UAAUU,UANR,OAQxB,YAAK6O,cAAL,SAAaG,KAAK,aAAc,CAC9BU,SAAQ,UAAE,EAAKpQ,UAAU8O,YAAjB,aAAE,EAAqBsB,SAC/BjP,OAAM,UAAE,EAAKnB,UAAU8O,YAAjB,aAAE,EAAqB3N,OAC7B8O,aACAC,eACAC,SAbsB,2C,4GAiBzBhQ,U,oFAA2B,SAACY,GAC3B,IAAMsP,EAAe,EAAKC,MAAMrP,IAAIF,EAAKqP,WAAa,GACtD,EAAKE,MAAMC,IAAIxP,EAAKqP,SAApB,sBAAkCC,GAAlC,YAAmDtP,EAAKyP,gB,8CAGzDrQ,U,oFAA0B,SAACY,GAAuB,IAAD,EAC1CqP,EACJrP,EAAK0P,YAAL,UAAkB,EAAKzQ,UAAU8O,YAAjC,aAAkB,EAAqB3N,QACnCJ,EAAKmP,aACLnP,EAAK2P,WACLL,EAAe,EAAKC,MAAMrP,IAAImP,IAAa,GAEjD,EAAKE,MAAMC,IAAIH,EAAf,sBAA6BC,GAA7B,CAA2CtP,S,4CAG5CZ,U,yEAAwB,SAACwQ,Q,2CAIzBxQ,U,oFAAuB,SAACY,GACvB,EAAK6P,YAAc7P,M,2CAGpBZ,U,oFAAuB,SAACY,GACvB,EAAK8P,QAAU9P,M,wCAGhBZ,U,oFAAoB,SAAC2Q,GAAuB,IAAD,EAC1C,YAAKvB,cAAL,SAAaG,KAAK,cAAeoB,O,uQCrGrC,I,eAAMC,GAAiBnR,YAAH,KAsDLoR,I,EAvCb,WACU/Q,EACAD,GACP,yBAFOC,YAER,KADQD,YACR,sL,qCANDE,c,yEAAqC,K,mCACrCA,c,yEAAwC,Q,wCAOxCC,U,oFAA4B,SAACC,GAC5B,EAAKC,QAAUD,M,sCAGhBD,U,oFAA0B,SAACG,GAC1B,EAAKA,MAAQA,M,yCAGdH,U,2HAA4B,WAAOiQ,EAAkBa,GAAzB,iBAAA1Q,EAAA,yDACtB,EAAKP,UAAUU,OADO,wBAEzB,EAAKC,YAAW,GAChB,EAAKC,SAAS,MAHW,kBAMA,EAAKX,UAAUyG,MAEnC,CACDA,MAAOqK,GACPtQ,UAAW,CAAE2P,WAAUa,cAVF,gBAMflQ,EANe,EAMfA,KAOR,EAAKf,UAAUgB,aAAaC,IAAIF,EAAM,gCACtC,EAAKf,UAAUkB,gBACbD,IAAIF,EAAM,iCAEZ,EAAKJ,YAAW,GAjBO,kDAmBvB,EAAKC,SAAL,MACA,EAAKD,YAAW,GApBO,0D,iHCnClBuQ,IAAb,qKAKI,OAAOhD,KAAKiD,QALhB,QAEgBC,UAA2B,KAF3C,GAQgBC,YAAc,WAC1B,GAAIH,GAAOE,UAAW,OAAOF,GAAOE,UAEpC,IAAM7B,EAAS,IAAI2B,GAGnB,OAFAA,GAAOE,UAAY7B,EAEZA,GAdX,yCACGrP,cADH,6FAIGiO,YAJH,wGAiBGhO,UAjBH,oFAiB2B,SAACgQ,QACPV,IAAb,EAAK0B,MACP,EAAKA,IAAMG,KAAG/V,KAAIa,SAAW+T,EAAI,WAAOA,GAAS,UAnBvD,ICKaoB,GAAb,WAWE,WACStR,EACCuR,GACP,yBAFMvR,YAEP,KADQuR,UACR,KAbKrP,SAAW,IAAI2L,IAapB,KAZK9N,UAAY,IAAIyO,EAAUP,KAAKjO,WAYpC,KAXKwR,UAAY,IAAInC,EAAUpB,KAAKlO,UAAWkO,KAAKqB,QAWpD,KAVKmC,WAAa,IAAIV,GAAW9C,KAAKjO,UAAWiO,KAAKlO,WAUtD,KATK2R,cAAgB,IAAI5R,KAAcmO,KAAKlO,UAAWkO,KAAKjO,WAUvDuR,EAAQF,IACXE,EAAQI,UAhBd,mDAQI,OAAO1D,KAAKsD,QAAQF,OARxB,KAqBe,QAAIC,GAAUnW,KAAQ8V,GAAOG,iB","file":"static/js/main.f655436e.chunk.js","sourcesContent":["import ApolloClient from 'apollo-boost';\n\nimport env from '@config/env';\n\nexport const client = new ApolloClient({\n  uri: env.backendUrl,\n  request: (operation) => {\n    const token = localStorage.getItem('authToken');\n\n    operation.setContext({\n      headers: {\n        Authorization: token ? `Bearer ${token}` : '',\n      },\n    });\n  },\n});\n","export default {\n  authToken: process.env.REACT_APP_AUTH_TOKEN || '',\n  chatUrl: process.env.REACT_APP_CHAT_URL || 'https://tantora.io/api-chat',\n  backendUrl:\n    process.env.REACT_APP_BACKEND_URL || 'https://tantora.io/api/graphql',\n};\n","import { createMuiTheme } from '@material-ui/core';\nimport indigo from '@material-ui/core/colors/indigo';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: indigo,\n    secondary: blueGrey,\n    common: {\n      white: '#fff',\n      blue: '#1B70BE',\n      grey: '#757575',\n      lightGrey: '#EFF4F8',\n      lighterGrey: '#858585',\n      ultraLightGrey: '#BCCFE1',\n      ultraLightGrey2: '#8A9CAD',\n      ultraLightGrey3: '#C5C5C5',\n      roundGrey: '#DCE8F2',\n      grey2: '#97A4AF',\n      black: '#000000',\n      green: '#1BBE61',\n      whiteGrey: '#E3E8ED',\n      darkBlue: '#212D37',\n    },\n  },\n});\n\ntheme = {\n  ...theme,\n  breakpoints: {\n    ...theme.breakpoints,\n    values: {\n      xs: 480,\n      sm: 600,\n      md: 960,\n      lg: 1180,\n      xl: 1920,\n    },\n  },\n  mixins: {\n    ...theme.mixins,\n    container: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n      maxWidth: 1180,\n      margin: '0 auto',\n      [theme.breakpoints.down('md')]: {\n        padding: '0 50px',\n      },\n      [theme.breakpoints.down('sm')]: {\n        padding: '0 40px',\n      },\n      [theme.breakpoints.down('xs')]: {\n        padding: '0 30px',\n      },\n    },\n    sectionPaddings: {\n      padding: '111px 0',\n      [theme.breakpoints.down('md')]: {\n        padding: '111px 50px',\n      },\n      [theme.breakpoints.down('sm')]: {\n        padding: '111px 40px',\n      },\n      [theme.breakpoints.down('xs')]: {\n        padding: '111px 30px',\n      },\n    },\n    fullPageContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      minHeight: 'calc(100vh - 64px)',\n      padding: '150px 0',\n    },\n    form: {\n      width: '100%',\n      maxWidth: '400px',\n      padding: '25px 50px',\n      border: `1px solid ${theme.palette.divider}`,\n      borderRadius: 5,\n    },\n  },\n};\n\nexport default theme;\n","import { observable, action } from 'mobx';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport get from 'lodash/get';\n\nimport { CreateUserResponse } from 'generated/graphql';\n\ninterface IAuthProvider<T> {\n  isAuth: boolean;\n  setAuthToken: (token: T) => void;\n  setRefreshToken: (toke: T) => void;\n}\n\nexport const ROLE_ENUM = Object.freeze({\n  CLIENT: 'client',\n  PRODUCER: 'producer',\n  ORGANIZER: 'organizer',\n});\n\ninterface IRegisterProps {\n  userName: string;\n  password: string;\n  email: string;\n  firstName: string;\n  lastName: string;\n  phone: string;\n  dateOfBirth: string;\n  role: string;\n}\n\nconst CreateUserMutation = gql`\n  mutation(\n    $userName: String!\n    $password: String!\n    $email: String!\n    $firstName: String!\n    $lastName: String!\n    $phone: String\n    $dateOfBirth: String!\n  ) {\n    createUser(\n      userName: $userName\n      password: $password\n      email: $email\n      firstName: $firstName\n      lastName: $lastName\n      phone: $phone\n      dateOfBirth: $dateOfBirth\n    ) {\n      token {\n        accessToken\n      }\n      user {\n        userId\n      }\n    }\n  }\n`;\n\nconst AddToAdminsMutation = gql`\n  mutation($userId: String!) {\n    addToAdmins(userId: $userId) {\n      status\n    }\n  }\n`;\n\nconst AddToProducerMutation = gql`\n  mutation($userId: String!) {\n    addToProducer(userId: $userId) {\n      status\n    }\n  }\n`;\n\nclass RegisterStore {\n  @observable public loading: boolean = false;\n  @observable public error: Error | null = null;\n\n  constructor(\n    private authStore: IAuthProvider<string>,\n    private appClient: ApolloClient<unknown>\n  ) {}\n\n  @action private setLoading = (val: boolean): void => {\n    this.loading = val;\n  };\n\n  @action private setError = (error: Error | null): void => {\n    this.error = error;\n  };\n\n  @action public handleRegister = async ({\n    role,\n    ...variables\n  }: IRegisterProps) => {\n    if (!this.authStore.isAuth) {\n      this.setLoading(true);\n      this.setError(null);\n\n      try {\n        const { data } = await this.appClient.mutate<{\n          createUser: CreateUserResponse;\n        }>({\n          mutation: CreateUserMutation,\n          variables,\n        });\n\n        this.authStore.setAuthToken(get(data, 'createUser.token.accessToken'));\n        this.authStore.setRefreshToken(\n          get(data, 'createUser.token.refreshToken')\n        );\n        const userId = get(data, 'createUser.user.userId');\n\n        if (role === ROLE_ENUM.PRODUCER) {\n          await this.appClient.mutate({\n            mutation: AddToProducerMutation,\n            variables: { userId },\n          });\n        } else if (role === ROLE_ENUM.ORGANIZER) {\n          await this.appClient.mutate({\n            mutation: AddToAdminsMutation,\n            variables: { userId },\n          });\n        }\n\n        this.setLoading(false);\n      } catch (e) {\n        this.setError(e);\n        this.setLoading(false);\n      }\n    }\n  };\n}\n\nexport default RegisterStore;\n","import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport backend from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(backend)\n  .use(detector)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json',\n    },\n    whitelist: ['en', 'cn', 'ru'],\n    preload: ['en', 'cn', 'ru'],\n    fallbackLng: 'en',\n    react: {\n      wait: true,\n      useSuspense: false,\n    },\n  });\n\nexport default i18n;\n","import React, { ChangeEventHandler } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { makeStyles } from '@material-ui/core';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport useStore from 'hooks/useStore';\nimport { LANGUAGES } from 'stores/appStore';\n\nconst Languages = observer(() => {\n  const { appStore } = useStore();\n  const classes = useStyles();\n\n  const handleChange: ChangeEventHandler<{ value: any }> = (e) => {\n    appStore.setLang(e.target.value);\n  };\n\n  return (\n    <Select\n      className={classes.select}\n      value={appStore.lang}\n      onChange={handleChange}\n    >\n      <MenuItem value={LANGUAGES.en}>EN</MenuItem>\n      <MenuItem value={LANGUAGES.ru}>РУ</MenuItem>\n      <MenuItem value={LANGUAGES.cn}>中文</MenuItem>\n    </Select>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    color: theme.palette.common.white,\n    marginRight: 15,\n    border: 'none',\n    [theme.breakpoints.down('xs')]: {\n      fontSize: 14,\n    },\n  },\n}));\n\nexport default Languages;\n","import React from 'react';\nimport Logo from 'assets/images/icon.png';\n\nexport const NAV_ITEMS = [\n  {\n    label: 'home',\n    link: '/',\n    icon: <img src={Logo} alt=\"home\" />,\n  },\n  {\n    label: 'exhibitions',\n    link: '/exhibitions',\n    icon: '',\n  },\n  {\n    label: 'about',\n    link: '/about',\n    icon: '',\n  },\n  {\n    label: 'service',\n    link: '/services',\n    icon: '',\n  },\n];\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { NAV_ITEMS } from '@config/nav_items';\n\nconst Menu = observer(() => {\n  const [t] = useTranslation('common');\n  const classes = useStyles();\n\n  return (\n    <List className={classes.list}>\n      {NAV_ITEMS.map(({ label, link }) => (\n        <Link to={link} key={label}>\n          <ListItem\n            className={classes.button}\n            color=\"secondary\"\n            key={label}\n            button={true}\n          >\n            <ListItemText primary={t(`header.${label}`)} />\n          </ListItem>\n        </Link>\n      ))}\n    </List>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    display: 'flex',\n    alignItems: 'center',\n    color: theme.palette.common.white,\n    marginRight: 25,\n    fontSize: 38,\n\n    '&:last-child': {\n      marginRight: 0,\n    },\n  },\n  icon: {\n    color: theme.palette.common.white,\n    minWidth: 'auto',\n    marginRight: 10,\n  },\n}));\n\nexport default Menu;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport { NAV_ITEMS } from '@config/nav_items';\n\ninterface IProps {\n  open: boolean;\n  handleClose: () => void;\n}\n\nconst Menu: FC<IProps> = observer(({ open, handleClose }) => {\n  const classes = useStyles();\n  const [t] = useTranslation('common');\n\n  return (\n    <div>\n      <Drawer anchor=\"left\" open={open} onClose={handleClose}>\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={handleClose}\n          onKeyDown={handleClose}\n        >\n          <List>\n            {NAV_ITEMS.map(({ label, link, icon }) => {\n              return (\n                <Link to={link} key={label}>\n                  <ListItem\n                    className={classes.navItem}\n                    color=\"secondary\"\n                    key={label}\n                    button={true}\n                  >\n                    <ListItemIcon className={classes.itemIcon}>\n                      {icon}\n                    </ListItemIcon>\n                    <ListItemText primary={t(`header.${label}`)} />\n                  </ListItem>\n                </Link>\n              );\n            })}\n          </List>\n          <Divider />\n          <List className={classes.signBtnsWrapper}>\n            <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n              <Button color=\"secondary\">{t('header.register')}</Button>\n            </Link>\n            <Link\n              to=\"/login\"\n              style={{ textDecoration: 'none' }}\n              className={classes.signBtn}\n            >\n              <Button color=\"inherit\">{t('header.sign-in')}</Button>\n            </Link>\n          </List>\n        </div>\n      </Drawer>\n    </div>\n  );\n});\n\nconst useStyles = makeStyles((theme) => ({\n  list: {\n    minWidth: 250,\n    height: '100%',\n    backgroundColor: theme.palette.secondary.dark,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  navItem: {\n    display: 'flex',\n    alignItems: 'center',\n    color: theme.palette.common.white,\n  },\n  itemIcon: {\n    height: 30,\n    '& > img': {\n      height: '100%',\n      width: 'auto',\n    },\n  },\n  signBtnsWrapper: {\n    '&&': {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n  },\n  signBtn: {\n    '&&': {\n      color: theme.palette.common.white,\n    },\n  },\n}));\n\nexport default Menu;\n","import React, { useState } from 'react';\nimport { gql } from 'apollo-boost';\nimport { useTranslation } from 'react-i18next';\nimport { useApolloClient } from '@apollo/react-hooks';\nimport { Link } from 'react-router-dom';\nimport { observer } from 'mobx-react-lite';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useMediaQuery } from 'react-responsive';\nimport { Waypoint } from 'react-waypoint';\nimport cls from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport { LogoutResponse } from 'generated/graphql';\nimport useStore from 'hooks/useStore';\nimport Languages from 'components/@common/Languages';\nimport Menu from 'components/@common/Menu';\nimport MenuMobile from 'components/@common/MenuMobile';\nimport Logo from 'assets/images/icon.png';\n\nconst LogoutQuery = gql`\n  query($token: String!) {\n    logout(token: $token) {\n      deleted\n    }\n  }\n`;\n\nconst Header = observer(() => {\n  const [t] = useTranslation('common');\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [active, setActive] = useState(false);\n  const { authStore } = useStore();\n  const client = useApolloClient();\n  const classes = useStyles();\n  const isTablet = useMediaQuery({ query: '(max-width: 768px)' });\n\n  const handleLogout = async () => {\n    try {\n      await client.query<{ logout: LogoutResponse }>({\n        query: LogoutQuery,\n        variables: {\n          token: authStore.authToken,\n        },\n      });\n    } catch (error) {\n      // handle error\n    }\n\n    client.resetStore();\n    authStore.clear();\n  };\n\n  const handleToggleMenu = (open: boolean) => () => {\n    setMenuOpen(open);\n  };\n  const handleEnter = () => {\n    setActive(false);\n  };\n  const handleLeave = () => {\n    setActive(true);\n  };\n\n  return (\n    <>\n      <Waypoint\n        bottomOffset={-300}\n        onEnter={handleEnter}\n        onLeave={handleLeave}\n      />\n      <div className={classes.root}>\n        <AppBar\n          position=\"static\"\n          className={cls(classes.headerBar, { active })}\n        >\n          <div className={`${classes.headerBg} bg`} />\n          {isTablet && (\n            <MenuMobile open={menuOpen} handleClose={handleToggleMenu(false)} />\n          )}\n          <Toolbar className={classes.headerToolbar}>\n            {isTablet && (\n              <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"default\"\n                aria-label=\"menu\"\n                onClick={handleToggleMenu(true)}\n              >\n                <MenuIcon className={classes.whiteBtn} />\n              </IconButton>\n            )}\n            {!isTablet && (\n              <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                <Button>\n                  <Typography variant=\"h6\" className={classes.whiteBtn}>\n                    <img src={Logo} alt=\"Logo\" className={classes.logo} />\n                  </Typography>\n                </Button>\n              </Link>\n            )}\n            {!isTablet && <Menu />}\n            <div className={classes.loginWrapper}>\n              <Languages />\n              {authStore.isAuth ? (\n                <Button className={classes.whiteBtn} onClick={handleLogout}>\n                  Logout\n                </Button>\n              ) : (\n                <div className={classes.signLang}>\n                  {!isTablet && (\n                    <Link to=\"/register\" style={{ textDecoration: 'none' }}>\n                      <Button className={classes.whiteBtn}>\n                        {t('header.register')}\n                      </Button>\n                    </Link>\n                  )}\n                  <Link to=\"/login\" style={{ textDecoration: 'none' }}>\n                    <Button className={classes.notwhiteBtn}>\n                      {t('header.sign-in')}\n                    </Button>\n                  </Link>\n                </div>\n              )}\n            </div>\n          </Toolbar>\n        </AppBar>\n      </div>\n    </>\n  );\n});\n\nconst useStyles = makeStyles((theme) => {\n  return {\n    root: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      zIndex: 250,\n      alignContent: 'center',\n      margin: 'auto',\n      [theme.breakpoints.down('xs')]: {\n        minWidth: 360,\n        height: 143,\n      },\n    },\n    headerBar: {\n      position: 'relative',\n      backgroundColor: 'transparent',\n      boxShadow: 'none',\n      paddingTop: 22,\n\n      '&.active': {\n        '& > .bg': { opacity: 1 },\n        paddingTop: 2,\n      },\n\n      '&:before': {\n        content: `\"\"`,\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        width: '100%',\n        height: '100%',\n      },\n    },\n    headerBg: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      width: '100%',\n      height: '100%',\n      backgroundColor: theme.palette.common.darkBlue,\n      opacity: 0,\n      transition: '0.3s',\n      minHeight: 50,\n    },\n    headerToolbar: {\n      ...theme.mixins.container,\n      justifyContent: 'space-between',\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n      '& .MuiIconButton-label': {\n        '& .MuiSvgIcon-root': {\n          fontSize: 30,\n        },\n      },\n    },\n    signLang: {\n      [theme.breakpoints.down('xs')]: {\n        margin: 0,\n      },\n    },\n    whiteBtn: {\n      color: theme.palette.common.white,\n      fontSize: 14,\n    },\n    notwhiteBtn: {\n      color: theme.palette.common.white,\n      backgroundColor: theme.palette.common.blue,\n      fontSize: 14,\n      padding: '10px 1px 12px',\n      marginLeft: 28,\n      width: 106,\n      height: 38,\n      [theme.breakpoints.down('xs')]: {\n        marginLeft: 0,\n      },\n    },\n    logo: {\n      paddingTop: 5,\n      height: 65,\n      boxSizing: 'border-box',\n      backgroundSize: 'cover',\n      position: 'relative',\n      [theme.breakpoints.down('xs')]: {\n        height: 55,\n      },\n    },\n    loginWrapper: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  };\n});\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport EmailIcon from '@material-ui/icons/Email';\nimport Logo from '../../assets/images/icon.png';\n\nconst Header = () => {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <div className={classes.logoContainer}>\n          <CardMedia image={Logo} className={classes.logo} />\n        </div>\n        <div className={classes.menu}>\n          <h3 className={classes.title}>MENU</h3>\n          <ul>\n            <li className={classes.btn}>Home</li>\n            <li className={classes.btn}>About</li>\n            <li className={classes.btn}>Services</li>\n            <li className={classes.btn}>News</li>\n            <li className={classes.btn}>Gallery</li>\n            <li className={classes.btn}>Contact</li>\n          </ul>\n        </div>\n        <div className={classes.menu}>\n          <h3 className={classes.title}>SERVICES</h3>\n          <ul>\n            <li className={classes.btn}>Virtual exhibition</li>\n            <li className={classes.btn}>Online conference</li>\n            <li className={classes.btn}>Market place</li>\n            <li className={classes.btn}>Traditional exhibition</li>\n          </ul>\n        </div>\n        <div className={classes.menu}>\n          <h3 className={classes.title}>CONTACT US</h3>\n          <ul>\n            <li className={classes.contacts}>\n              <a\n                href=\"mailto: nurislam.ashirmatov@yandex.ru\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <EmailIcon fontSize=\"small\" className={classes.icons} />\n                {' nurislam.ashirmatov@yandex.ru'}\n              </a>\n            </li>\n            <li className={classes.contacts}>\n              <a\n                href=\"tel: +8613249720671\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                <PhoneIcon fontSize=\"small\" className={classes.icons} />\n                {' +8 613 249 72 0671'}\n              </a>\n            </li>\n          </ul>\n          <div className={classes.iconWrapper}>\n            <FacebookIcon fontSize=\"default\" className={classes.socialIcon} />\n            <InstagramIcon fontSize=\"default\" className={classes.socialIcon} />\n          </div>\n        </div>\n\n        <Typography color=\"inherit\" className={classes.ftitle}>\n          &copy; {new Date().getFullYear()} Tantora. All rights reserved.\n        </Typography>\n      </Container>\n    </footer>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    paddingTop: 55,\n    paddingBottom: 59,\n    backgroundColor: theme.palette.common.darkBlue,\n    padding: 20,\n    [theme.breakpoints.down('xs')]: {\n      paddingBottom: 29,\n    },\n  },\n  root: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    backgroundColor: theme.palette.common.darkBlue,\n    color: theme.palette.common.white,\n    padding: '0 24px',\n    [theme.breakpoints.down('xs')]: {\n      flexWrap: 'wrap',\n    },\n  },\n  logoContainer: {\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n    },\n  },\n  logo: {\n    position: 'relative',\n    width: 99,\n    height: 80,\n    boxSizing: 'border-box',\n    backgroundSize: 'cover',\n    margin: '0 auto 25px',\n    [theme.breakpoints.down('xs')]: {\n      margin: '0 108px 28px',\n    },\n  },\n  ftitle: {\n    color: theme.palette.common.grey2,\n    fontSize: 14,\n    width: '100%',\n    marginLeft: 0,\n    marginTop: 25,\n    [theme.breakpoints.down('xs')]: {\n      marginBottom: 0,\n      margin: 'auto',\n      textAlign: 'center',\n    },\n  },\n  menu: {\n    position: 'relative',\n    color: theme.palette.common.ultraLightGrey2,\n  },\n  title: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    marginBottom: 12,\n  },\n  btn: {\n    fontSize: 14,\n    listStyle: 'none',\n    marginTop: 8,\n  },\n  contacts: {\n    fontSize: 14,\n    listStyle: 'none',\n    marginTop: 8,\n    '& > a': {\n      display: 'flex',\n      alignItems: 'center',\n      color: theme.palette.common.ultraLightGrey2,\n    },\n  },\n  iconWrapper: {\n    display: 'flex',\n    margin: 'auto',\n    [theme.breakpoints.down('xs')]: {\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      margin: 'auto',\n    },\n  },\n  socialIcon: {\n    marginTop: 25,\n    border: `solid 1px ${theme.palette.common.ultraLightGrey2}`,\n    padding: 3,\n    borderRadius: '50%',\n    marginRight: 10,\n    '&:last-item': {\n      marginRight: 0,\n    },\n    [theme.breakpoints.down('xs')]: {\n      marginTop: 20,\n      padding: 5,\n      alignItems: 'center',\n      width: 33,\n      height: 33,\n      marginBottom: 22,\n    },\n  },\n  icons: {\n    padding: 3,\n    borderRadius: '50%',\n  },\n}));\n\nexport default Header;\n","import React, { FC, useEffect } from 'react';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ThemeProvider } from '@material-ui/core';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { observer } from 'mobx-react-lite';\nimport loadable from '@loadable/component';\n\nimport 'mobx-react-lite/batchingForReactDom';\nimport 'normalize.css';\n\nimport './App.scss';\n\nimport theme from 'theme';\nimport rootStore from 'stores/rootStore';\nimport { client } from 'client';\nimport { StoreProvider } from 'hooks/useStore';\nimport Loading from 'components/@common/Loading';\nimport Header from 'components/@common/Header';\nimport Footer from 'components/@common/Footer';\n\n// loadable components\nconst LoadableHome = loadable(() => import('components/Home'), {\n  fallback: <Loading />,\n});\nconst LoadableExhibitions = loadable(() => import('components/Events'), {\n  fallback: <Loading />,\n});\nconst LoadableExhibition = loadable(() => import('components/Exhibiton'), {\n  fallback: <Loading />,\n});\nconst LoadableLogin = loadable(() => import('components/Login'), {\n  fallback: <Loading />,\n});\nconst LoadableAdmins = loadable(() => import('components/Admin'), {\n  fallback: <Loading />,\n});\nconst LoadableRegistration = loadable(() => import('components/Registration'), {\n  fallback: <Loading />,\n});\nconst LoadableMessages = loadable(() => import('components/Messages'), {\n  fallback: <Loading />,\n});\nconst LoadableVisitors = loadable(() => import('components/Visitors'), {\n  fallback: <Loading />,\n});\nconst LoadableExhibitors = loadable(() => import('components/Exhibitors'), {\n  fallback: <Loading />,\n});\n\nconst App: FC = observer(() => {\n  const classes = useStyles();\n  const { authStore } = rootStore;\n\n  useEffect(() => {\n    authStore.fetchMe();\n  }, [authStore.authToken]);\n\n  return (\n    <ApolloProvider client={client}>\n      <StoreProvider>\n        <ThemeProvider theme={theme}>\n          <Router>\n            <Header />\n            <main className={classes.main}>\n              <Switch>\n                <Route path=\"/\" exact={true}>\n                  <LoadableHome />\n                </Route>\n                <Route path=\"/exhibitions\">\n                  <LoadableExhibitions />\n                </Route>\n                <Route path=\"/exhibition\">\n                  <LoadableExhibition />\n                </Route>\n                <Route path=\"/admins\">\n                  <LoadableAdmins />\n                </Route>\n                <Route path=\"/login\">\n                  <LoadableLogin />\n                </Route>\n                <Route path=\"/register\">\n                  <LoadableRegistration />\n                </Route>\n                <Route path=\"/messages\">\n                  <LoadableMessages />\n                </Route>\n                <Route path=\"/visitors\">\n                  <LoadableVisitors />\n                </Route>\n                <Route path=\"/exhibitors\">\n                  <LoadableExhibitors />\n                </Route>\n              </Switch>\n            </main>\n            <Footer />\n          </Router>\n        </ThemeProvider>\n      </StoreProvider>\n    </ApolloProvider>\n  );\n});\n\nconst useStyles = makeStyles({\n  main: {\n    minHeight: 'calc(100vh - 70px)',\n  },\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          // tslint:disable-next-line: no-console\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              // tslint:disable-next-line: no-console\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              // tslint:disable-next-line: no-console\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      // tslint:disable-next-line: no-console\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      // tslint:disable-next-line: no-console\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        // tslint:disable-next-line: no-console\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './i18n';\nimport './index.scss';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // tslint:disable-next-line: jsx-wrap-multiline\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n});\n\nconst CircularIndeterminate = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress />\n    </div>\n  );\n};\n\nexport default CircularIndeterminate;\n","import React, { FC, createContext, useContext } from 'react';\nimport rootStore, { RootStore } from 'stores/rootStore';\n\nconst StoreContext = createContext<RootStore>(rootStore);\n\nexport const StoreProvider: FC = ({ children }) => (\n  <StoreContext.Provider value={rootStore}>{children}</StoreContext.Provider>\n);\n\nexport default () => {\n  const store = useContext(StoreContext);\n\n  if (!store) {\n    throw new Error('Define `StoreProvider` higher up in the tree');\n  }\n\n  return store;\n};\n","module.exports = __webpack_public_path__ + \"static/media/icon.3daa1afa.png\";","import { observable, computed, action, reaction } from 'mobx';\nimport i18n from 'i18next';\n\nexport const LANGUAGES = Object.freeze({\n  en: 'en',\n  ru: 'ru',\n  cn: 'cn',\n});\n\nexport class AppStore {\n  @observable private _lang: string = LANGUAGES.en;\n\n  constructor() {\n    reaction(\n      () => this._lang,\n      (lang) => {\n        i18n.changeLanguage(lang);\n      }\n    );\n  }\n\n  @computed public get lang(): string {\n    return this._lang;\n  }\n\n  @action public setLang(lang: string): void {\n    this._lang = lang;\n  }\n}\n\nexport default AppStore;\n","import { ApolloClient, gql } from 'apollo-boost';\nimport { observable, computed, action } from 'mobx';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nimport { User, RefreshTokenResponse } from 'generated/graphql';\n\nconst MeQuery = gql`\n  query {\n    me {\n      userId\n      userName\n      firstName\n      lastName\n      email\n      phone\n      dateOfBirth\n      isActive\n    }\n  }\n`;\n\nconst RefreshTokenMutation = gql`\n  mutation($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      token {\n        accessToken\n        refreshToken\n      }\n    }\n  }\n`;\n\nconst LOCAL_STORAGE_ENUMS = Object.freeze({\n  AUTH_TOKEN: 'authToken',\n  REFRESH_TOKEN: 'refreshToken',\n});\n\nclass AuthStore {\n  @observable private _authToken: string;\n  @observable private _refreshToken: string;\n  @observable private _user: User | null = null;\n\n  @computed public get isAuth(): boolean {\n    return !isEmpty(this._authToken) && this.user !== null ? true : false;\n  }\n\n  @computed public get user(): User | null {\n    return this._user;\n  }\n\n  @computed public get authToken(): string {\n    const authToken =\n      localStorage.getItem(LOCAL_STORAGE_ENUMS.AUTH_TOKEN) || '';\n\n    return this._authToken || authToken;\n  }\n\n  @computed public get refreshToken(): string {\n    const refreshToken =\n      localStorage.getItem(LOCAL_STORAGE_ENUMS.REFRESH_TOKEN) || '';\n\n    return this._refreshToken || refreshToken;\n  }\n\n  constructor(private appClient: ApolloClient<unknown>) {\n    const authToken = localStorage.getItem(LOCAL_STORAGE_ENUMS.AUTH_TOKEN);\n    const refreshToken = localStorage.getItem(\n      LOCAL_STORAGE_ENUMS.REFRESH_TOKEN\n    );\n\n    this._authToken = authToken || '';\n    this._refreshToken = refreshToken || '';\n  }\n\n  @action clear = () => {\n    this._authToken = '';\n    this._refreshToken = '';\n    this._user = null;\n    localStorage.removeItem(LOCAL_STORAGE_ENUMS.AUTH_TOKEN);\n    localStorage.removeItem(LOCAL_STORAGE_ENUMS.REFRESH_TOKEN);\n  };\n\n  @action public setAuthToken = (token: string): void => {\n    localStorage.setItem(LOCAL_STORAGE_ENUMS.AUTH_TOKEN, token);\n    this._authToken = token;\n  };\n\n  @action public setRefreshToken = (token: string): void => {\n    localStorage.setItem(LOCAL_STORAGE_ENUMS.REFRESH_TOKEN, token);\n    this._refreshToken = token;\n  };\n\n  @action public setUser = (user: User) => {\n    this._user = user;\n  };\n\n  @action public fetchMe = async () => {\n    if (this.refreshToken) {\n      try {\n        const {\n          data: { me },\n        } = await this.appClient.query<{ me: User }>({\n          query: MeQuery,\n        });\n\n        this.setUser(me);\n      } catch (err) {\n        await this.refreshAccessToken();\n        this.fetchMe();\n      }\n    } else {\n      this.clear();\n    }\n  };\n\n  @action public refreshAccessToken = async () => {\n    if (this.refreshToken) {\n      try {\n        const { data } = await this.appClient.mutate<{\n          refreshToken: RefreshTokenResponse;\n        }>({\n          mutation: RefreshTokenMutation,\n          variables: {\n            refreshToken: this.refreshToken,\n          },\n        });\n\n        const accessToken = get(data, 'refreshToken.token.accessToken', null);\n        const refreshToken = get(data, 'refreshToken.token.refreshToken', null);\n\n        if (accessToken && refreshToken) {\n          this.setAuthToken(accessToken);\n          this.setRefreshToken(refreshToken);\n        } else {\n          this.clear();\n        }\n      } catch (err) {\n        // need to handle this case\n        this.clear();\n      }\n    }\n  };\n}\n\nexport default AuthStore;\n","import { observable, action, when } from 'mobx';\n\nimport { User } from 'generated/graphql';\n\ninterface IAuthProvider {\n  isAuth: boolean;\n  user: User | null;\n}\n\ninterface IFriend {\n  userId: string;\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\ninterface IRecentChat extends IFriend {\n  createdDate: string;\n}\n\ninterface IMessage {\n  senderId: string;\n  receiverId: string;\n  content: string;\n  createdDate: string;\n}\n\ninterface INewMessage extends IMessage {\n  senderName: string;\n  receiverName: string;\n}\n\ninterface IMessagesResponse {\n  messages: IMessage[];\n  userName: string;\n  firstName: string;\n  lastName: string;\n}\n\nclass ChatStore {\n  @observable public chats = observable.map<string, IMessage[]>([]);\n  @observable public friends: IFriend[] = [];\n  @observable public recentChats: IRecentChat[] = [];\n\n  constructor(\n    private authStore: IAuthProvider,\n    private socket: SocketIOClient.Socket | undefined\n  ) {\n    this.init();\n  }\n\n  private init = async () => {\n    await when(() => this.socket !== undefined);\n    await when(() => this.authStore.isAuth);\n\n    // init emitters\n    this.socket?.emit('get recent', this.authStore.user?.userId);\n    this.socket?.emit('get friends', this.authStore.user?.userId);\n\n    // listeners\n    this.socket?.on('recent messages', this.handleRecents);\n    this.socket?.on('friends', this.handleFriends);\n    this.socket?.on('user joined', this.handleUserJoin);\n\n    this.socket?.on('new message', this.handleNewMessage);\n    this.socket?.on('messages list', this.handleNewMessages);\n  };\n\n  @action handleEnterChat = async (\n    receiverId: string,\n    receiverName: string,\n    room: string\n  ) => {\n    await when(() => this.socket !== undefined);\n    await when(() => this.authStore.isAuth);\n\n    this.socket?.emit('enter chat', {\n      userName: this.authStore.user?.userName,\n      userId: this.authStore.user?.userId,\n      receiverId,\n      receiverName,\n      room,\n    });\n  };\n\n  @action handleNewMessages = (data: IMessagesResponse) => {\n    const currentChats = this.chats.get(data.userName) || [];\n    this.chats.set(data.userName, [...currentChats, ...data.messages]);\n  };\n\n  @action handleNewMessage = (data: INewMessage) => {\n    const userName =\n      data.senderId === this.authStore.user?.userId\n        ? data.receiverName\n        : data.senderName;\n    const currentChats = this.chats.get(userName) || [];\n\n    this.chats.set(userName, [...currentChats, data]);\n  };\n\n  @action handleUserJoin = (_: string) => {\n    // TODO ...need to implememt\n  };\n\n  @action handleRecents = (data: IRecentChat[]) => {\n    this.recentChats = data;\n  };\n\n  @action handleFriends = (data: IFriend[]) => {\n    this.friends = data;\n  };\n\n  @action handleSend = (chatInput: string) => {\n    this.socket?.emit('new message', chatInput);\n  };\n}\n\nexport default ChatStore;\n","import { observable, action } from 'mobx';\nimport { ApolloClient, gql } from 'apollo-boost';\nimport get from 'lodash/get';\n\nimport { LoginResponse } from 'generated/graphql';\n\ninterface IAuthProvider<T> {\n  isAuth: boolean;\n  setAuthToken: (token: T) => void;\n  setRefreshToken: (toke: T) => void;\n}\n\nconst LoginUserQuery = gql`\n  query($userName: String!, $password: String!) {\n    loginUser(userName: $userName, password: $password) {\n      token {\n        refreshToken\n        accessToken\n      }\n    }\n  }\n`;\n\nclass LoginStore {\n  @observable public loading: boolean = false;\n  @observable public error: Error | null = null;\n\n  constructor(\n    private appClient: ApolloClient<unknown>,\n    private authStore: IAuthProvider<string>\n  ) {}\n\n  @action private setLoading = (val: boolean): void => {\n    this.loading = val;\n  };\n\n  @action private setError = (error: Error | null): void => {\n    this.error = error;\n  };\n\n  @action public handleLogin = async (userName: string, password: string) => {\n    if (!this.authStore.isAuth) {\n      this.setLoading(true);\n      this.setError(null);\n\n      try {\n        const { data } = await this.appClient.query<{\n          loginUser: LoginResponse;\n        }>({\n          query: LoginUserQuery,\n          variables: { userName, password },\n        });\n\n        this.authStore.setAuthToken(get(data, 'loginUser.token.accessToken'));\n        this.authStore.setRefreshToken(\n          get(data, 'loginUser.token.refreshToken')\n        );\n        this.setLoading(false);\n      } catch (e) {\n        this.setError(e);\n        this.setLoading(false);\n      }\n    }\n  };\n}\n\nexport default LoginStore;\n","import { observable, computed, action } from 'mobx';\nimport io from 'socket.io-client';\n\nimport env from '@config/env';\n\nexport class Socket {\n  @observable private _io?: SocketIOClient.Socket;\n  public static _instance: Socket | null = null;\n\n  @computed get io(): SocketIOClient.Socket | undefined {\n    return this._io;\n  }\n\n  public static getInstance = (): Socket => {\n    if (Socket._instance) return Socket._instance;\n\n    const socket = new Socket();\n    Socket._instance = socket;\n\n    return socket;\n  };\n\n  @action public connect = (room?: string) => {\n    if (this._io === undefined) {\n      this._io = io(env.chatUrl + (room ? `/${room}` : ''));\n    }\n  };\n}\n\nconst useSocket = (): Socket => {\n  return Socket.getInstance();\n};\n\nexport default useSocket;\n","import { ApolloClient } from 'apollo-boost';\n\nimport AppStore from 'stores/appStore';\nimport AuthStore from 'stores/authStore';\nimport ChatStore from 'stores/chatStore';\nimport LoginStore from 'stores/loginStore';\nimport RegisterStore from 'stores/registerStore';\nimport { client } from 'client';\nimport { Socket } from 'hooks/useSocket';\n\nexport class RootStore {\n  public appStore = new AppStore();\n  public authStore = new AuthStore(this.appClient);\n  public chatStore = new ChatStore(this.authStore, this.socket);\n  public loginStore = new LoginStore(this.appClient, this.authStore);\n  public registerStore = new RegisterStore(this.authStore, this.appClient);\n\n  get socket(): SocketIOClient.Socket | undefined {\n    return this._socket.io;\n  }\n\n  constructor(\n    public appClient: ApolloClient<unknown>,\n    private _socket: Socket\n  ) {\n    if (!_socket.io) {\n      _socket.connect();\n    }\n  }\n}\n\nexport default new RootStore(client, Socket.getInstance());\n"],"sourceRoot":""}