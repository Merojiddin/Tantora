image: node:10

# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

stages:
  - test
  - build
  - deploy_review
  - deploy_staging

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables:
  STAGING_DOMAIN: tantora-staging.surge.sh
  REVIEW_DOMAIN: tantora-$CI_ENVIRONMENT_SLUG.surge.sh

test:
  stage: test
  only:
    - master
    - development
    - merge_requests
  script:
    - yarn
    - yarn run format
    - yarn run check

build_stage:
  stage: build
  only:
    - master
    - development
    - merge_requests
  before_script:
    - yarn
  script: yarn run build
  artifacts:
    paths:
      - build/
  variables:
    REACT_APP_CHAT_URL: https://tantora-chat.herokuapp.com/
    REACT_APP_BACKEND_URL: https://online-exhibition.herokuapp.com/graphql

deploy_review:
  stage: deploy_review
  only:
    - merge_requests
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://tantora-$CI_ENVIRONMENT_SLUG.surge.sh
    on_stop: stop_review
  script:
    - npm install --global surge
    - surge --project ./build --domain $REVIEW_DOMAIN

stop_review:
  stage: deploy_review
  only:
    - merge_requests
  variables:
    GIT_STRATEGY: none
  script:
    - npm install --global surge
    - surge teardown $REVIEW_DOMAIN
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop

deploy staging:
  stage: deploy_staging
  environment:
    name: staging
    url: http://$STAGING_DOMAIN
  only:
    - development
  script:
    - npm install --global surge
    - surge --project ./public --domain $STAGING_DOMAIN